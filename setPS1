#!/bin/env bash

BASE=/root
rcfile=$BASE/.qyh_vim/vimrc
export PROXY_HOST=192.168.3.152
PROXY_PORT=2333
export TIME_STYLE=+"%Y_%m_%d %H:%M:%S"
export HISTFILESIZE=
export HISTSIZE=
export HISTTIMEFORMAT="[%F %T] "
export HISTFILE=~/.bash_history_qyh
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

main( ) {
    set_working_dir "$@"
    set_PS1
    set_proxy
    clean_proxy
    set_vimrc
    set_PATH
    show_banner
    stty -ixon
}

set_working_dir( ) {
    COMPILER_BASE=$BASE
    PROJECT_NAME=~/proj/PD1515BA
    LIB_LOG_FILE=compile_lib.log
    if [ -z "$1" ] ; then
        export PROJECT_NAME=$(readlink -f $PROJECT_NAME)
    else
        export PROJECT_NAME=$(readlink -f $1)
    fi
    export llf=$PROJECT_NAME/$LIB_LOG_FILE
    export w=$PROJECT_NAME
    export w0=$COMPILER_BASE/tools
    export w1=$w/vendor/qcom/proprietary/mm-camera/
    export w1sdk=$w/vendor/qcom/proprietary/mm-camerasdk/
    export w11=$w1/mm-camera2/media-controller/modules/sensors/
    export w111=$w11/sensor/libs/imx298/
    export w2=$PROJECT_NAME/hardware/qcom/camera
    export w3=$w1/../test/stats
}

set_PS1( ) {
    # PS1="\[\e]0;\w\a\]\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$ "
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
}

vim_( ) {
    vim -u "$rcfile" "$@"
}

set_proxy( ) {
    export http_proxy=$PROXY_HOST:$PROXY_PORT
    export https_proxy=$PROXY_HOST:$PROXY_PORT
}

clean_proxy( ) {
    export http_proxy=
    export https_proxy=
}

set_vimrc( ) {
    tmpfile=~/tmp.tmp.tmp.tmp
    flag_start="\" \[+\] generated by setPS1 start"
    flag_end="\" \[+\] generated by setPS1 end"
    line_start=$( grep -n "$flag_start" $rcfile | awk -F ":" '{print $1}' )
    line_end=$( grep -n "$flag_end" $rcfile | awk -F ":" '{print $1}' )
    cmd_t="set tags=$w1/tags,$w1sdk/tags,$w/kernel/tags,$w2/tags,$w3/tags"
    cmd_1="cs add $w1 $w1"
    cmd_1s="cs add $w1sdk $w1sdk"
    cmd_k="cs add $w/kernel $w/kernel"
    cmd_2="cs add $w2 $w2"
    cmd_3="cs add $w3 $w3"
    if [ "x$line_start" != "x" ] ; then
        arg_sed="${line_start},${line_end}d"
        sed $arg_sed $rcfile > $tmpfile
    else
        cat $rcfile > $tmpfile
        echo "" >> $tmpfile
    fi
    echo ${flag_start//\\/} >> $tmpfile
    echo $cmd_t >> $tmpfile
    echo $cmd_1 >> $tmpfile
    echo $cmd_1s >> $tmpfile
    echo $cmd_k >> $tmpfile
    echo $cmd_2 >> $tmpfile
    echo $cmd_3 >> $tmpfile
    echo $cmd_a >> $tmpfile
    echo $cmd_b >> $tmpfile
    echo ${flag_end//\\/} >> $tmpfile
    mv -f $tmpfile $rcfile
}

set_PATH( ) {
    export PATH=$PATH:$BASE/tools
}

show_banner( ) {
    clear
    cat $BASE/tools/banner.txt
}

main "$@"  

alias ls="ls -N -h -F --color=auto --show-control-chars"
alias ll="ls -N -h -F -l --color=auto --show-control-chars"
alias du="du -h --time --max-depth=1"